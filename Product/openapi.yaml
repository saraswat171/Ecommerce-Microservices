



openapi: 3.0.0
info:
  title: Product Service API
  description: CRUD operations for managing products
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /products/:productId:
    parameters:
      - name: productId
        in: path
        required: true
        description: ID of the product to perform operation on
        schema:
          type: string
    put:
      summary: Update product by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Successful operation
        '404':
          description: 'Not Found:  This response is shown if the request for information is not there or it could not be imported'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: product Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
        '400':
         description:  Invalid or incorrect credential  
    delete:
      summary: delete product by ID
      responses:
        '204':
          description: Successful operation
        '404':
          description: 'Not Found:  This response is shown if the request for information is not there or it could not be imported'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Product Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
        '400':
         description:  Invalid or incorrect credential 
  /products/{retailerId}:
    parameters:
      - name: retailerId
        in: path
        required: true
        description: ID of the retailer to get products for
        schema:
          type: string
    get:
      summary: Get products by retailer ID
      responses:
        '200':
          description: Successful operation
        '404':
          description: 'Not Found:  This response is shown if the request for information is not there or it could not be imported'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Product Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
        '400':
         description:  Invalid or incorrect credential  
  /products/:retailerId:
    parameters:
      - name: retailerId
        in: path
        required: true
        description: ID of the retailer to create products for
        schema:
          type: string
    post:
      summary: Create a new product of
      
       a retailer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created successfully

 
components:
  schemas:
    Product:
      type: object
      properties:
        category:
          type: string
          description: Category of the product
        title:
          type: string
          description: Title of the product
        description:
          type: string
          description: Description of the product
        quantity:
          type: integer
          minimum: 0
          description: Quantity of the product available
        images:
          type: array
          items:
            type: string
          description: URLs of images for the product
        price:
          type: number
          format: float
          minimum: 0
          description: Price of the product
        size:
          type: string
          description: Size of the product
        retailerId:
          type: string
          description: ID of the retailer
      required:
        - category
        - title
        - price
        - retailerId
    ProductUpdate:
      type: object
      properties:
        category:
          type: string
          description: Category of the product
        title:
          type: string
          description: Title of the product
        description:
          type: string
          description: Description of the product
        quantity:
          type: integer
          minimum: 0
          description: Quantity of the product available
        images:
          type: array
          items:
            type: string
          description: URLs of images for the product
        price:
          type: number
          format: float
          minimum: 0
          description: Price of the product
        size:
          type: string
          description: Size of the product
      required:
        - category
        - title
        - price

    CartItem:
        type: object
        properties:
          productId:
            type: string
            description: ID of the product
          quantity:
            type: integer
            
            description: Quantity of the product
          totalPrice:
            type: number
            format: float
            
            description: Total price of the product(s)
          customerId:
            type: string
            description: ID of the customer placing the order  
        required:
          - productId
          - quantity
          - totalPrice    