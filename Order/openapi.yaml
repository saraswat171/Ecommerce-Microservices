openapi: 3.0.0
info:
  title: Order Service API
  description: CRUD operations for managing orders and carts & payments
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /cart:
    post:
      tags:
        - Cart
      summary: add to cart
      description: customer card
      requestBody:
        required: true
        content:
         
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItem'
            
      parameters:
        - name: 'id'
          in: path
          required: true
          description: The ID of User
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          schema:
            type: string
            format: uuid         
          
      responses:
        '201':
          description: Post Created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        
        '404':
          description: 'Not Found:  This response is shown if the request for information is not there or it could not be imported'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
        '400':
         description:  Invalid or incorrect credential
    get:
      tags:
        - Cart
      summary: Get order by ID
      responses:
        '200':
          description: Successful operation

        '404':
          description: 'Not Found:  This response is shown if the request for information is not there or it could not be imported'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Data Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
        '400':
         description:  Invalid or incorrect credential  
    put:
      tags:
        - Cart
      summary: Update order by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Successful operation
    delete:
      tags:
        - Cart
      summary: Delete order by ID
      responses:
        '204':
          description: Order deleted successfully
        '404':
          description: 'Not Found:  This response is shown if the request for information is not there or it could not be imported'
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Data Not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal server error
        '400':
         description:  Invalid or incorrect credential  
 
components:
     schemas:
       Order:
        type: object
        properties:
          id:
            type: string
            format: uuid
          customerId:
            type: string
            description: ID of the customer placing the order
          cart:
            type: array
            items:
              $ref: '#/components/schemas/CartItem'
        required:
          - customerId
          - cart
       CartItem:
        type: object
        properties:
          productId:
            type: string
            description: ID of the product
          quantity:
            type: integer
            
            description: Quantity of the product
          totalPrice:
            type: number
            format: float
            
            description: Total price of the product(s)
          customerId:
            type: string
            description: ID of the customer placing the order  
        required:
          - productId
          - quantity
          - totalPrice